#warn  ; enable warning to assist with detecting common errors.

; dark context menu
 ;---------------------------------------------------------------------------
 {
contextcolor() ;0=Default ;1=AllowDark ;2=ForceDark ;3=ForceLight ;4=Max
contextcolor(color:=2)
	{
    static uxtheme := DllCall("GetModuleHandle", "str", "uxtheme", "ptr")
    static SetPreferredAppMode := DllCall("GetProcAddress", "ptr", uxtheme, "ptr", 135, "ptr")
    static FlushMenuThemes := DllCall("GetProcAddress", "ptr", uxtheme, "ptr", 136, "ptr")
    DllCall(SetPreferredAppMode, "int", color)
    DllCall(FlushMenuThemes)
	}
}

#SingleInstance, Force
#NoEnv
#Persistent ; Keeps a script permanently running (that is, until the user closes it or ExitApp is encountered)
#InstallKeybdHook
#InstallMouseHook

SetWinDelay, -1
CoordMode, Mouse, Screen
SendMode Input

SetWorkingDir %A_ScriptDir%
filePath := A_ScriptFullPath

FormatTime, A_Time,, Time
FormatTime, A_ShortDate,, ShortDate
FormatTime, A_LongDate,, LongDate
FormatTime, A_YY,, yy
formattime, A_HH,, HH
formattime, A_tt,, tt
StartTime := A_TickCount
ElapsedTime := A_TickCount - StartTime



If !A_IsAdmin
  Run *RunAs "%A_ScriptFullPath%"

menu, tray, icon, C:\xsysicons\oxylite ico export\keyboard-caps-lock-filled xfav arrow send move_256x256.ico


aboutcapsmenu =
(

This tool is ment to be used on selected text.

It has been modified to show when text is not selected,
therefoure, at times, it may not work as expected.
E.G. if no text is selected it a text edtior and you fire a menu item, it may copy and format an entire line.

A.k.a., use with Caution!!!

I do not recommend using the Copy, Cut & Paste fucntions on files!
They have been include here for the fun of it.
Thou, when renameing, you can use this menu to modifiy the text, as well as its search functions.

Auto Correct Hot Strings code sourced from https://www.autohotkey.com/docs/v1/Hotstrings.htm
The full Auto Correct Hot String Script is NOT included here, thou, I highly recomment it.
It can be sourced here: https://www.autohotkey.com/boards/viewtopic.php?t=84768


)

hotkeys =
(
Ctrl + Capslock = Show Menu
Shift + Capslock = Switch Between UPPERCASE and\or lowercase
⊞ + O = Search Selected Text in Google
Alt + O = Search Selected Word\Text on Dictonary.com
⊞ + F = Search Selected Text Locally Using Everything 1.5a
Ctrl + " = Wraps the Selected "Text In Quotes"
Win + H = Add Auto Correct Hot Strings


Ctrl + Shift + R = Reloads the Script
)



;----------------------------------------------------------------------------------------------------
;------------------------------ Change Caps {of selected} Text Utility from fastkeys ----------------
;----------------------------------------------------------------------------------------------------
;this below needs doing twice sometimes
^CapsLock:: ;Ctrl+Caps - Change Case for SELECTED text with menu tool
capsmenubutton:
GetText(Txt)
; If NOT ERRORLEVEL ; og code here, it will only show up when text is selected. I COMMENTED This Out So That It Will always show.

;;; caplock menu, case menu
menu, Case, Add
menu, Case, DeleteAll
menu, Case, Add, UPPERCASE, CCase ; p=1
menu, Case, Add, lowercase, CCase ; p=2
menu, Case, Add, Title Case, CCase ; p=3
menu, Case, Add, Sentence case, CCase ; p=4
menu, Case, Add ; p=5 - line
menu, Case, Add, Fix Linebreaks, CCase ; p=6
menu, Case, Add, Reverse, CCase ; p=7
menu, Case, Add ; p=8 - line
menu, Case, Add, Remove Extra Spaces, CCase ; p=9
menu, Case, Add, Remove All Spaces, RASpace
menu, Case, icon, Remove All Spaces, C:\xsysicons\oxygen linux icons\cmd\sc_gluepercent_16x16.ico
menu, Case, Add ;xnote -started adding my own items here
;--------------------------------------------------
menu, Case, Add ;xnote -started adding my own items here
menu, Case, Add, "&Quotes", ClipQuote
menu, Case, icon, "&Quotes", C:\xsysicons\Goggle Material ICO export\editor\format quote_24x24.ico
menu, Case, Add, 1 ``Code - `Inline``, CodeLine
menu, Case, Add, 2 ``````Code - Box``````, CodeBox
menu, Case, icon, 2 ``````Code - Box``````, C:\xsysicons\Fluent Colored icons\macro creator fluent\selection text code Resources_200_24x24.ico
menu, case, add, 3 `{Curly Brackets`} on new lines, wrapincbrackets
menu, case, icon, 3 `{Curly Brackets`} on new lines, C:\xsysicons\icons extracted from software\markdown monster fileicons\coding code json filetype_24x24.ico
menu, Case, Add, 4 <kbd>`K<`/kbd>, dopusK
menu, Case, icon, 4 <kbd>`K<`/kbd>, C:\xsysicons\icons extracted from software\xml code_128x128.ico
menu, case, add, 5 `<`!-- xml Comment --`>, wrapinxmlcomment
menu, Case, Add, ; line
menu, Case, Add, Add Spelling Hotstring, AddHotstring
; menu, Case, Add, Add to NP++ DSpell, Addtodspell ;coming soon, todo
menu, case, add ; line ;-------------------------
menu, case, add, Google This, googlethis
menu, case, icon, Google This, C:\xsysicons\icons extracted from software\flow launcher v1.19\google_96x96.ico
menu, case, add, AHK Syntax Search, ahksearch
menu, case, icon, AHK Syntax Search, C:\xsysicons\vs code icons ico\www.autohotkey.com website favcon_48x48.ico
menu, case, add, Look up on Dictionary.com, Dictionarydotcom
menu, case, add, Look up on WordWeb Pro, wordwebpro
menu, case, icon, Look up on WordWeb Pro, C:\xsysicons\icons extracted from software\wordwebpro wweb 72x72.ico
Menu, Case, add, Find Locally with Everything, Findwitheverything
Menu, Case, icon, Find Locally with Everything, C:\xsysicons\icons extracted from software\EverythingIcons\voidtools-15-Everything-1.5.ico
menu, case, add, ; line ;-------------------------
menu, case, add, Insert Date && Time, DTmenubutton
menu, case, icon, Insert Date && Time, C:\xsysicons\icons extracted from software\clock SHELL32_16771 256x256.ico
menu, Case, Add ; line ;-------------------------
menu, Case, Add, Add &More Formatting, Addmore
menu, Case, icon, Add &More Formatting, C:\Program Files\Notepad++\notepad++.exe,0
menu, Case, Add ;line ;-------------------------
menu, Case, Add, Copy, basiccopy
menu, Case, icon, Copy, C:\xsysicons\tengo ico export\edit-copy_32x32.ico
Menu, Case, add, Cut, basiccut
menu, case, icon, Cut, C:\xsysicons\tengo ico export\edit-cut_32x32.ico
menu, case, add, Paste, basicpaste
menu, case, icon, Paste, C:\xsysicons\oxylite ico export\edit-paste_256x256.ico
menu, case, add, Ditto Clipboard, dittobutton
menu, case, icon, Ditto Clipboard, C:\xsysicons\icons extracted from software\ditto quote clipboard 128x128.ico
menu, Case, Add ;line ;-------------------------
menu, case, add, Close This Menu, ExitMenu
menu, case, icon, Close This Menu, C:\xsysicons\icons extracted from software\aero Close_24x24-32b.ico
menu, case, show
Return

CCase:
p:=A_ThisMenuItemPos
If (p=1)  ; UPPER
  StringUpper, Txt, Txt
Else If (p=2)  ; lower
  StringLower, Txt, Txt
Else If (p=3)  ; Title Case
  StringLower, Txt, Txt, T
Else If (p=4)  ; Sentence case
{
  StringLower, Txt, Txt
  Txt := RegExReplace(Txt, "((?:^|[.!?]\s+)[a-z])", "$u1")
}
Else If (p=6)  ; Fix Linebreaks
{
  Txt := RegExReplace(Txt, "\R", "`r`n")
}
Else If (p=7)  ; esreveR
{
  Temp2 =
  StringReplace, Txt, Txt, `r`n, % Chr(29), All
  Loop Parse, Txt
    Temp2 := A_LoopField . Temp2
  StringReplace, Txt, Temp2, % Chr(29), `r`n, All
}
Else If (p=9)  ;  Remove Extra Spaces
{
  Loop
  {
  StringReplace, Txt, Txt, %A_Space%%A_Space%, %A_Space%, UseErrorLevel
  if ErrorLevel = 0
    break
  }
}
PutText(Txt)
Return

GetText(ByRef MyText = "")
{
local
	static
SavedClip := ClipboardAll
Clipboard =
Send ^{vk43} ;Ctrl C
ClipWait 0.5
If ERRORLEVEL
{
  Clipboard := SavedClip
  MyText =
  Return
}
MyText := Clipboard
Clipboard := SavedClip
Return MyText
}

PutText(MyText)
{
	local  ;xnote I added these 2 line because of errors
	static
SavedClip := ClipboardAll
Clipboard =
Sleep 20
Clipboard := MyText
Send ^{vk56} ;Ctrl V
Sleep 100
Clipboard := SavedClip
Return
}


; ^':: ;Put Text in Quotes

^':: ;'Put selected text in "Quotes"
ClipQuote:
{
SavedClip := Clipboard
Clipboard =
Send ^{vk43} ;Ctrl C
ClipWait 1
Tmp:=Clipboard
Tmp = "%Tmp%"
;;;;;;;; Remove space introduced by WORD
StringReplace, Tmp, Tmp,%A_SPACE%",", All
Clipboard = Tmp
Sleep 20
Clipboard := Tmp
Send ^{vk56} ;Ctrl V
Sleep 100
Clipboard := SavedClip
return
}
return
;-------------------------------------------------- END fast keys menu, START my Case Menu Additons
basiccopy:
Send ^{vk43} ;Ctrl C ; SendInput, ^c
return
basiccut:
SendInput, ^x
return
basicpaste:
Send ^{vk56} ;Ctrl V ; SendInput, ^v
return

wrapincbrackets:
{
SavedClip := Clipboard
Clipboard =
Send ^{vk43} ;Ctrl C
ClipWait 1
Tmp:=Clipboard
Tmp = `{`n%Tmp%`n`}
Clipboard =
Sleep 20
Clipboard := Tmp
Send ^{vk56} ;Ctrl V
Sleep 100
Clipboard := SavedClip
return
}
return

wrapinxmlcomment:
{
SavedClip := Clipboard
Clipboard =
Send ^{vk43} ;Ctrl C
ClipWait 1
Tmp:=Clipboard
Tmp = <`!-- %Tmp% -->
Clipboard =
Sleep 20
Clipboard := Tmp
Send ^{vk56} ;Ctrl V
Sleep 100
Clipboard := SavedClip
return
}
return

^!#,:: ; dopus, add html > md code to menus
dopusK:
{
SavedClip := Clipboard
Clipboard =
Send ^{vk43} ;Ctrl C
ClipWait 1
Tmp:=Clipboard
Tmp = <kbd>%Tmp%</kbd>
Clipboard =
Sleep 20
Clipboard := Tmp
Send ^{vk56} ;Ctrl V
Sleep 100
Clipboard := SavedClip
return
}
return


CodeLine:
{
SavedClip := Clipboard
Clipboard =
Send ^{vk43} ;Ctrl C
ClipWait 1
Tmp:=Clipboard
Tmp = ``%Tmp%``
Clipboard =
Sleep 20
Clipboard := Tmp
Send ^{vk56} ;Ctrl V
Sleep 100
Clipboard := SavedClip
return
}
return


CodeBox:
{
SavedClip := Clipboard
Clipboard =
Send ^{vk43} ;Ctrl C
ClipWait 1
Tmp := Clipboard
Tmp = ```````n%Tmp%`n``````
Clipboard =
Sleep 20
Clipboard := Tmp
Send ^{vk56} ;Ctrl V
Sleep 100
Clipboard := SavedClip
return
}
return


;-------------------------

Addmore:
{
run, "notepad.exe" "%filePath%" ; "`%1"
WinWaitActive, Notepad
sleep 2000
send, ^f
sleep 300
send, Addmore
sleep 200
send {enter}
}
return

RASpace:
SavedClip := ClipboardAll
Clipboard =
Send ^{vk43} ;Ctrl C
ClipWait 1
TempText:=Clipboard
Loop
{
 StringReplace, TempText, TempText, %A_Space%,, UseErrorLevel ;%A_Space%%A_Space%
 if ErrorLevel = 0
   break
}
Clipboard =
Sleep 20
Clipboard := TempText
Send ^{vk56} ;Ctrl V
Sleep 100
Clipboard := SavedClip
Return

AddHotstring:
addsphotstring()
return

addtodspell:
;; how do I append a new line to a document from selected text?? Hmmm?
; run, "notepad++.exe" "C:\Users\CLOUDEN\AppData\Roaming\Notepad++\plugins\config\Hunspell\en_US.usr"
tooltip, Coming soon... try #H for now
sleep 1000
tooltip
return

wordwebpro:
{
SaveClip := ClipboardAll
Clipboard := ""
Send ^{vk43} ;Ctrl C
ClipWait 1
; send, ^c
run, "C:\Program Files (x86)\WordWeb\wwnotray.exe" -shownow
sleep 300
send, ^v
}
return

googlethis:
{
        OldClipboard := ClipboardAll  ; Save the current clipboard content
        Clipboard := ""  ; Clear the clipboard to prepare for new content
        Send, ^c
        ClipWait  ; Wait for the clipboard to contain data
        if (Clipboard = "") { ; If the clipboard is empty, use the old clipboard content
            Clipboard := OldClipboard
        }
        Run, http://www.google.com/search?q=%Clipboard%
        Sleep 200
        Clipboard := OldClipboard ; Restore the original clipboard content

}
Return


ahksearch:
{
; = "https://www.google.com/search?q=site:ahkscript.org+$(Currentselection)"
; = "https://www.google.com/search?q=site:ahkscript.org+$(Currentselection)"
;; run, https://www.autohotkey.com/search/?q=%Find%
        OldClipboard := ClipboardAll  ; Save the current clipboard content
        Clipboard := ""  ; Clear the clipboard to prepare for new content
        Send, ^c
        ClipWait  ; Wait for the clipboard to contain data
        if (Clipboard = "") { ; If the clipboard is empty, use the old clipboard content
            Clipboard := OldClipboard
        }
        ; Run, https://www.autohotkey.com/search/?q=%Clipboard%
		run, "https://www.google.com/search?q=site:autohotkey.com+$%Clipboard%"
        Sleep 200
        Clipboard := OldClipboard ; Restore the original clipboard content

}
return

;-------------------------- double tap CAPS to switch between lowercase & FULLCAPS ------------------
;----------------------fast keys --------------------------------------------------------------------


; ~CapsLock::    ; Double Tap CAPS to switch between UPPERCASE & lowercase
;If (A_PriorHotKey = A_ThisHotKey and A_TimeSincePriorHotkey < 350)

+CapsLock::    ; Switch between UPPERCASE & lowercase
{
  origClipboard=%clipboard%
  clipboard=
  SendInput, ^{vk43} ;Ctrl C
  ClipWait, 2
  if not ErrorLevel
  {
    allCapsBool=1
    Loop, parse, clipboard
    {
      if A_Loopfield is lower
        allCapsBool = 0
    }
    if allCapsBool
      StringLower, clipboard, clipboard
    else
      StringUpper, clipboard, clipboard
    SendInput, ^{vk56} ;Ctrl V
    Sleep, 350
  }
  clipboard=%origClipboard%
}
return

Findwitheverything:
Findwitheverything()
return
#f:: ;Search {clipboard} in everything
Findwitheverything()
{
    Send, ^c
    ClipWait ; Wait for the clipboard to contain data
    Run, "C:\Program Files\Everything 1.5a\Everything64.exe"
	sleep 500
	send, ^v
return
}
::]dtm::
DTMenubutton:
	{
; Menu, dtmenu, DeleteAll ;new
    Date := A_Now
    List := DateFormats(Date)
    TextMenuDate(List)
}
return

DateFormats(Date)
{
local
static
  FormatTime, OutputVar , %Date%, h:mm tt ;12 hour clock
  List := OutputVar
  FormatTime, OutputVar , %Date%, HH:mm tt ;24 hour clock
  List := List . "|" . OutputVar
  FormatTime, OutputVar , %Date%, ShortDate ; 11/5/2015
  List := List . "|" . OutputVar
  ; FormatTime, OutputVar , %Date%, MMM. d, yyyy ; Aug. 26, 2024
  ; List := List . "|" . OutputVar
  FormatTime, OutputVar , %Date%, MMMM d, yyyy ; August 26, 2024
  List := List . "|" . OutputVar
  FormatTime, OutputVar , %Date%, LongDate ; Monday, August 26, 2024
  List := List . "|" . OutputVar
  FormatTime, OutputVar, %Date%, dddd, MMMM d, yyyy, h:mm tt  ; Friday, September 6, 2024, 9:46 PM
  List := List . "|" . OutputVar
  FormatTime, OutputVar, %Date%, dddd, MMMM d, yyyy, hh:mm:ss tt ; Friday, September 6, 2024, 09:46:41 PM
  List := List . "|" . OutputVar
  FormatTime, OutputVar, %Date%, %A_now% ; 20240826165553
  List := List . "|" . OutputVar
   FormatTime, OutputVar, %Date%, dddd ; Monday
  List := List . "|" . OutputVar
   FormatTime, OutputVar, %Date%, MMMM ; August
  List := List . "|" . OutputVar
  Return List
}


TextMenuDate(TextOptions)
{
 StringSplit, MenuItems, TextOptions , |
 Loop %MenuItems0%
  {
    Item := MenuItems%A_Index%
    Menu, dtmenu, add, %Item%, dtMenuAction
  }
 menu, dtmenu, add ; line ;-------------------------
 menu, dtmenu, add, &Exit This Menu, ExitMenu
 Menu, dtmenu, icon, &Exit This Menu, C:\xsysicons\icons extracted from software\aero Close_24x24-32b.ico
 Menu, dtMenu, Show
 Menu, dtMenu, DeleteAll
}


dtMenuAction:
 ; WinActivate, ahk_id %ActWin%  ;activate original window
 ; If A_ThisMenuItem Is Alpha
 ; {
   ; SendInput %A_ThisMenuItem%{Raw}%A_EndChar%
  ; }
 ; Else
 {
	; clipboard := ""
	clipboard := A_ThisMenuItem
	SendInput %A_ThisMenuItem%
	sleep 200
    tooltip, Date Copied
    sleep 500
    tooltip
}
Return
;; fastkeys 08-10-2024
Dictionarydotcom:  ; added to caps\ccase menu
!o:: ;search dictionary.com, fastkeys
; 1•^3•Ctrl + 3•Search Text in Word Dictionary•Command•
SaveClip := ClipboardAll
Clipboard := ""
Send ^{vk43} ;Ctrl C
ClipWait 1
Word := RegExReplace(Clipboard, "[^\w\s]")
Clipboard := SaveClip
SaveClip := ""
Run, http://dictionary.reference.com/browse/%Word%?s=t
return

ExitMenu:
send, {esc}
return
;;;; END Date Time menu

dittobutton:
send, ^!#v
return

^+r:: ;Reload Fastkey
tooltip, CAPS Menu Reloading...
sleep 800
ToolTip
return

#h::
addsphotstring() ;; Function
{
; #+s::
; Get the selected text. The clipboard is used instead of "ControlGet Selected"
; as it works in more editors and word processors, java apps, etc. Save the
; current clipboard contents to be restored later.
AutoTrim On  ; Delete any leading and trailing whitespace on the clipboard.  Why would you want this?
ClipboardOld = %ClipboardAll%
Clipboard =  ; Must start off blank for detection to work.
Send ^c
ClipWait 1
if ErrorLevel  ; ClipWait timed out.
    return
; Replace CRLF and/or LF with `n for use in a "send-raw" hotstring:
; The same is done for any other characters that might otherwise
; be a problem in raw mode:
StringReplace, Hotstring, Clipboard, ``, ````, All  ; Do this replacement first to avoid interfering with the others below.
StringReplace, Hotstring, Hotstring, `r`n, ``r, All  ; Using `r works better than `n in MS Word, etc.
StringReplace, Hotstring, Hotstring, `n, ``r, All
StringReplace, Hotstring, Hotstring, %A_Tab%, ``t, All
StringReplace, Hotstring, Hotstring, `;, ```;, All
Clipboard = %ClipboardOld%  ; Restore previous contents of clipboard.
; This will move the InputBox's caret to a more friendly position:
SetTimer, MoveCaret, 10
; Show the InputBox, providing the default hotstring:
InputBox, Hotstring, New Hotstring, Provide the corrected word on the right side. You can also edit the left side if you wish.`n`nExample entry:`n::teh::the,,,,,,,, ::%Hotstring%::%Hotstring%

if ErrorLevel <> 0  ; The user pressed Cancel.
    return
; Otherwise, add the hotstring and reload the script:
FileAppend, `n%Hotstring%, %A_ScriptFullPath%  ; Put a `n at the beginning in case file lacks a blank line at its end.
Reload
Sleep 1000 ; If successful, the reload will close this instance during the Sleep, so the line below will never be reached.
MsgBox, 4,, The hotstring just added appears to be improperly formatted.  Would you like to open the script for editing? Note that the bad hotstring is at the bottom of the script.
IfMsgBox, Yes, Edit
return

MoveCaret:
IfWinNotActive, New Hotstring
    return
; Otherwise, move the InputBox's insertion point to where the user will type the abbreviation.
Send {HOME}
Loop % StrLen(Hotstring) + 4
    SendInput {Right}
SetTimer, MoveCaret, Off
return
}
;-------------------------------------------------------------------------------
; Anything below this point was added to the script by the user via the Win+H hotkey.
;-------------------------------------------------------------------------------